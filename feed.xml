<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="en" /><updated>2018-01-05T21:48:32+04:00</updated><id>http://localhost:4000/</id><title type="html">Nikita Panteleev</title><subtitle>Nikita Panteleev ePortfolio. Scala, Java backend developer, fullstack developer, team leader.
</subtitle><author><name>Nikita Panteleev</name><email>nikita.panteleev@phystech.edu</email></author><entry><title type="html">The story of my life (as programmer).</title><link href="http://localhost:4000/development/2017/11/22/opinionated-view/" rel="alternate" type="text/html" title="The story of my life (as programmer)." /><published>2017-11-22T00:00:00+04:00</published><updated>2017-11-22T00:00:00+04:00</updated><id>http://localhost:4000/development/2017/11/22/opinionated-view</id><content type="html" xml:base="http://localhost:4000/development/2017/11/22/opinionated-view/">&lt;p&gt;My first meeting with programming languages was at school. When I was 14 years old or so, we started to solve simple array sortation problems on our programming lessons. By this time, we already learnt some sophisticated math as our preparation for olympiads, so all tasks were quite easy but tools were hard. And this still remains the same: solutions for business are immediately obvious from first glance, I encounter only  limitations of frameworks &amp;amp; tecnologies. I still remember the blue screen of Borland C studio which we used at school. And even in my first courses of university I couldn’t even imagine that there were another IDEs. And this still remains the same: most of people don’t use another tools and approaches not because they are conservative regarding them. They don’t use them because they simple can not imagine they can solve some tasks differently. This observation is true not only for IT people. Even business negotiators very often stop meeting after they found one solution, although there could be other solutions and better agreements. Also at first cources of university I start to use Debian, configured KDE and was very enthusiastic to use as much GNU tools as possible on my laptop. I still prefer command line and old school, although I couldn’t completely switch to Emacs. I use Inteliji Idea, sublime editor and emacs only for org-mode (and very rare magit and dired).&lt;/p&gt;

&lt;p&gt;&lt;em&gt;post in progress&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;how-business-sees-tech&quot;&gt;How business sees tech.&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;post in progress&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;how-tech-hides-from-business-and-focus-on-geeky-stuff&quot;&gt;How tech hides from business and focus on “geeky” stuff.&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;post in progress&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;functional-breakthrough&quot;&gt;Functional breakthrough.&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;post in progress&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;thoughts-on-my-future-steps-in-career&quot;&gt;Thoughts on my future steps in career.&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;post in progress&lt;/em&gt;&lt;/p&gt;</content><author><name>Nikita Panteleev</name><email>nikita.panteleev@phystech.edu</email></author><category term="Scala" /><category term="Java" /><category term="CS" /><category term="Development" /><summary type="html">The story of my life (as programmer). My first meeting with programming languages was at school. When I was 14 years old or so, we started to solve simple array sortation problems on our programming lessons. By this time, we already learnt some sophisticated math as our preparation for olympiads, so all tasks were quite easy but tools were hard. And this still remains the same: solutions for business are immediately obvious from first glance, I encounter only limitations of frameworks &amp;amp; tecnologies. I still remember the blue screen of Borland C studio which we used at school. And even in my first courses of university I couldn’t even imagine that there were another IDEs. And this still remains the same: most of people don’t use another tools and approaches not because they are conservative regarding them. They don’t use them because they simple can not imagine they can solve some tasks differently. This observation is true not only for IT people. Even business negotiators very often stop meeting after they found one solution, although there could be other solutions and better agreements. Also at first cources of university I start to use Debian, configured KDE and was very enthusiastic to use as much GNU tools as possible on my laptop. I still prefer command line and old school, although I couldn’t completely switch to Emacs. I use Inteliji Idea, sublime editor and emacs only for org-mode (and very rare magit and dired).</summary></entry></feed>